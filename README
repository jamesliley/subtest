This README is informal and a vignette will be available in time

The following provides detailed a general method of how to test a given PLR score. 


To generate a p-value from a PLR score, the null distribution of PLR needs to be estimated. This is done by generating random subgroups of your case group and fitting a related test statistic. This proceeds as follows:

# 1. For your true data Z=(Zd,Za), generate the PLR score as follows:

# a) fit the full model M1
M1=fit.3g(Z,..., fit_null=FALSE)

# b) fit the null model M0
M0=fit.3g(Z,..., fit_null=FALSE)

# c) calculate the PLR statistic
PLR=M1$logl- M0$logl - (M1$logl_a - M0$logl_a)

# 2. Steps 2-4 concern estimating the null distribution of PLR. Firstly, estimate the distribution of Za

# a) Generate starting parameter vector  - s1 and pi1 are fixed
ff=fit.em(Za,weights=weights,pi0_init=0.999)
s1=ff$sigma
pi1=1-ff$pi0; pi0=1-(2*pi1)
parsx=c(pi0,pi1,1,s1,1,0)


# 3. For a randomly-generated subgroup, generate scores Z'=(Zd',Za) (Za scores will be the same), and compute the cPLR, with starting parameters generated in step 2:

# a) fit the full model C1
C1=fit.cond(Z',pars=parsx,...,fit_null=FALSE)

# a) fit the null model C0
C0=fit.cond(Z',pars=parsx,...,fit_null=TRUE)

# c) Generate a summary vector
vec=c(C0$logl,C1$logl,C1$logl_a-C0$logl_a,0,0,[random seed, if applicable], C0$pars,C1$pars)

# d) Save summary vector

# 4. Repeat step 2 for >1500 randomly-generated subgroups, and combine all summary vectors from 2d) into a matrix (call it 'sims'), where each summary vector is a row. Now

# a). Estimate the null PLR distribution from these simulations:
S=rand_analysis(sims)

# b). Compute the p-value:
p_value(PLR,S)

